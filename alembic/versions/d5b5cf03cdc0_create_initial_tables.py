"""create initial tables

Revision ID: d5b5cf03cdc0
Revises:
Create Date: 2025-05-07 16:54:42.023570

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d5b5cf03cdc0"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tracks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(length=512), nullable=False),
        sa.Column("webpage_url", sa.String(length=1024), nullable=False),
        sa.Column("download_url", sa.String(length=1024), nullable=False),
        sa.Column("playlist_url", sa.String(length=1024), nullable=True),
        sa.Column("track_number_in_playlist", sa.Integer(), nullable=True),
        sa.Column("uploader", sa.String(length=255), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "DOWNLOADED",
                "TRANSCRIBED",
                "EMBEDDED",
                name="track_processing_status_enum",
            ),
            nullable=False,
        ),
        sa.Column("duration_seconds", sa.Float(), nullable=True),
        sa.Column("audio_file_path", sa.String(length=1024), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_tracks_download_url"), "tracks", ["download_url"], unique=False
    )
    op.create_index(op.f("ix_tracks_id"), "tracks", ["id"], unique=False)
    op.create_index(
        op.f("ix_tracks_playlist_url"), "tracks", ["playlist_url"], unique=False
    )
    op.create_index(op.f("ix_tracks_status"), "tracks", ["status"], unique=False)
    op.create_index(
        op.f("ix_tracks_webpage_url"), "tracks", ["webpage_url"], unique=True
    )
    op.create_table(
        "transcripts",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("track_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["track_id"], ["tracks.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_transcripts_id"), "transcripts", ["id"], unique=False)
    op.create_index(
        op.f("ix_transcripts_track_id"), "transcripts", ["track_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_transcripts_track_id"), table_name="transcripts")
    op.drop_index(op.f("ix_transcripts_id"), table_name="transcripts")
    op.drop_table("transcripts")
    op.drop_index(op.f("ix_tracks_webpage_url"), table_name="tracks")
    op.drop_index(op.f("ix_tracks_status"), table_name="tracks")
    op.drop_index(op.f("ix_tracks_playlist_url"), table_name="tracks")
    op.drop_index(op.f("ix_tracks_id"), table_name="tracks")
    op.drop_index(op.f("ix_tracks_download_url"), table_name="tracks")
    op.drop_table("tracks")
    # ### end Alembic commands ###
